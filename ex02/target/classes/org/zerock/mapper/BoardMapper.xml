<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BoardMapper"><!-- Interface와 동일 -->

	<!-- interface method == id name -->
	<!-- interface method rtn == resultType -->

	<!-- CDATA: 부등호 사용 -->
	<select id="getList" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
			select * from tbl_board where bno > 0
		]]>
	</select><!-- SQL 처리(method 선언은 interface) -->
	
	<!-- Paging 처리: rownum 이용 
		 index를 최신 순으로 rownum을 부여해 조회한 후, 한 페이지 당 10개씩 게시물을 보여줌 -->
	<select id="getListWithPaging" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
			select bno, title, content, writer, regdate, updatedate from
			(select /*+INDEX_DESC(tbl_board pk_board) */
			rownum rn, bno, title, content, writer, regdate, updatedate
			from tbl_board where rownum <= #{pageNum} * #{amount})
			where rn > (#{pageNum}-1) * #{amount}		
		]]>
	</select>

	<!-- 시퀀스의 다음 값을 구해 insert ==> 몇 건의 데이터가 변경되었는지만 알려줌(PK 알 수 없음)
		 (한 번의 처리만으로 작업이 완료되는 장점) -->
	<insert id="insert">
		insert into tbl_board (bno,title,content,writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>
	
	<!-- @SelectKey(MyBatis annotation) 사용
		 => PK 값을 미리(before) 처리하고 특정한 이름으로 결과 보관  -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			select seq_board.nextval from dual
		</selectKey>
		insert into tbl_board (bno,title,content,writer)
		values (#{bno}, #{title}, #{content}, #{writer})
	</insert>
	
	<select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno = #{bno}
	</select>
	
	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>
	
	<update id="update"><!-- 값은 파라미터로 전달받은 BoardVO 객체의 getter를 호출해 처리 -->
		update tbl_board
		set title= #{title},
		content=#{content},
		writer = #{writer},
		updateDate = sysdate
		where bno = #{bno}
	</update>
</mapper>